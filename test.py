exec("""\nimport os\nimport time\nfrom datetime import datetime, timedelta\n# import glob\nimport sys\n# import itertools\n# import threading\n\n# def toko_loading_nama(nama_toko):\n# 	return nama_toko\n\n# done = False\n# def animate():\n# 	for c in itertools.cycle(['|', '/', '-', '\\\\']):\n# 		if done:\n# 			break\n# 		sys.stdout.write('\\rloading ' + c)\n# 		sys.stdout.flush()\n# 		time.sleep(0.1)\n# 	sys.stdout.write('\\rDone!     ')\n\ndef find_files(environment):\n	if environment == 'dev':\n		rootDir = 'D:\\Development\\DATAHEAD'\n	if environment == 'prod':\n		rootDir = 'Z:'	\n	\n	naik = []\n	belum_naik = []\n	file_tidak_ada = []\n	folder_tidak_ada = []\n	belum_naik_copy = []\n	with open("daftarToko.txt", "r") as a_file:\n		print("this code is managed and updated by: https://github.com/wynadiis23")\n		now = datetime.now()\n		current_time = now.strftime("%H:%M:%S")\n		print("Current Time =", current_time)\n\n		current_minute = now.minute\n		print(current_minute)\n		\n		#check time. \n		#1. jika waktu skrg kurang dari xjam 10 menit, maka expected mod time adalah x-1jam 40ish menit.\n		print("this code is managed and updated by: https://github.com/wynadiis23")\n		if current_minute < 10:\n			now = datetime.now()\n			expected_mod_time = now.replace(hour=now.hour-1, minute=40, second=0).strftime("%H:%M:%S")\n			print("modified date yang diekspektasikan %s" %expected_mod_time)\n		#2. jika waktu skrg lebih dari xjam 10 menit dan kurang dari xjam 40 menit, maka expected mod time adalah xjam 10ish menit.\n		elif current_minute > 10 and current_minute < 40:\n			now = datetime.now()\n			expected_mod_time = now.replace(hour=now.hour, minute=10, second=0).strftime("%H:%M:%S")\n			print("modified date yang diekspektasikan %s" %expected_mod_time)\n		#3. jika waktu skrg lebih dari x jam 40 menit, maka expected mod time adalah xjam 40ish menit.\n		else:\n			now = datetime.now()\n			expected_mod_time = now.replace(hour=now.hour, minute=40, second=0).strftime("%H:%M:%S")\n			print("modified date yang diekspektasikan %s" %expected_mod_time)\n\n		#tanggal h-1\n		before_h = 1\n		get_yesterday = now - timedelta(days=before_h)\n		yesterday = get_yesterday.strftime('%Y-%m-%d')\n		print(yesterday)\n\n		for line in a_file:\n			stripped_line = line.strip()\n			toko = stripped_line+'-L1'\n			# if stripped_line == 'str':\n			# 	break\n\n			namaFile = toko + '-' + datetime.today().strftime('%Y-%m-%d') + '.zip'\n			namaFile_kemarin = toko + '-' + yesterday + '.zip'\n\n			direktori = rootDir + "\\\\" + toko + "\\\\" +"backup"\n\n			full_file_path = direktori + "\\\\" + namaFile\n			full_file_path_kemarin = direktori + "\\\\" + namaFile_kemarin\n			# print(direktori)\n			check_dir_exist = os.path.isdir(direktori)\n			\n\n			if check_dir_exist:\n				fullPath = direktori + "\\\\" + namaFile\n				if os.path.isfile(fullPath):\n					time_temp1 = time.ctime(os.path.getmtime(full_file_path))\n					time_temp2 = time.strptime(time_temp1)\n					modified_time_file = time.strftime('%H:%M:%S', (time_temp2))\n					# print(modified_time_file)\n					if expected_mod_time > modified_time_file:\n						str_1 = ("%s %s belum naik" % (namaFile, time.ctime(os.path.getmtime(full_file_path))))\n						belum_naik.append(str_1)\n						belum_naik_copy.append(stripped_line)\n						print(str_1)\n						# break\n					else:\n						str_1 = ("%s %s" % (namaFile, time.ctime(os.path.getmtime(full_file_path))))\n						naik.append(str_1)\n						print(str_1)\n					# print(naik);\n				else:\n					#check data kemarin ada tidak\n					fullPath = direktori + "\\\\" + namaFile_kemarin\n					if os.path.isfile(fullPath):\n						str_2 = ("%s not found | data kemarin: %s" % (namaFile_kemarin, time.ctime(os.path.getmtime(full_file_path_kemarin))))\n						file_tidak_ada.append(str_2)\n					else:\n						str_2 = (namaFile + ' not found')\n						file_tidak_ada.append(str_2)\n					print(str_2)\n			else:\n				tidak_ada_foler = ('folder ' + toko + ' tidak ada')\n				folder_tidak_ada.append(tidak_ada_foler)\n		\n			\n	print("\\n")\n	print("modified date yang diekspektasikan | %s" %expected_mod_time)\n	print("\\n")\n	print("Toko yang sudah naik | %s" %len(naik))\n	print(naik)\n	print("\\n")\n	print("Toko yang belum naik | %s" %len(belum_naik))\n	print(belum_naik)\n	print("\\n")\n	print("Toko file backupnya tidak ada | %s" %len(file_tidak_ada))\n	print(file_tidak_ada)\n	print("\\n")\n	print("Toko yang foldernya tidak ada | %s" %len(folder_tidak_ada))\n	print(folder_tidak_ada)\n	print("\\n")\n	print("Toko yang belum naik | %s" %len(belum_naik))\n	print(belum_naik_copy)\n	print("\\n")\n	print("this code is managed and updated by: https://github.com/wynadiis23")\n\n# opsi untuk exclude loading\n\nfind_files(sys.argv[1])\n""")